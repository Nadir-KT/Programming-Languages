Setting a bit

Since we all know that performing bitwise OR of any bit with a set bit results in a set bit, i.e.
Any bit <bitwise OR> Set bit = Set bit

which means,
0 | 1 = 1
1 | 1 = 1
So for setting a bit, performing a bitwise OR of the number with a set bit is the best idea.
N = N | 1 << K
OR
N |= 1 << K

where K is the bit that is to be set

-----------------------------------------------

Clearing a bit

Since bitwise AND of any bit with a reset bit results in a reset bit, i.e.
Any bit <bitwise AND> Reset bit = Reset bit

which means,
0 & 0 = 0
1 & 0 = 0


    
So for clearing a bit, performing a bitwise AND of the number with a reset bit is the best idea.

n = n & ~(1 << k)
OR
n &= ~(1 << k)

where k is the bit that is to be cleared

-------------------------------------------------

Toggle a bit

Since XOR of unset and set bit results in a set bit and XOR of a set and set bit results in an unset bit. Hence performing bitwise XOR of any bit with a set bit results in toggle of that bit, i.e.
Any bit <bitwise XOR> Set bit = Toggle

which means,
0 ^ 1 = 1
1 ^ 1 = 0


    
So in order to toggle a bit, performing a bitwise XOR of the number with a reset bit is the best idea.

n = n ^ 1 << k
OR
n ^= 1 << k

where k is the bit that is to be cleared