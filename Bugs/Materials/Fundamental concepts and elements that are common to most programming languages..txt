list of topics, concepts, and components for any programming language in a structured & sequential approach.

00. Comments - Notes in code for documentation.
01. Syntax - Grammatical rules governing how statements and expressions are structured.
02. Data Types - Named containers for storing data values like integers, strings, booleans, etc. Each container has an associated data type.
03. Variables - Named containers for storing data values. Variables have an associated data type and can be scalar or array-like.
04. Expressions - Combinations of values, variables, operators, and function calls that evaluate to a single value.
05. Keywords - Words with special meaning in the programming language, like if, while, and for.
06. Operators - Symbols like +, -, *, /, etc. used to perform operations on values and variables.
07. Decision-making, Conditional Statements - Statements like if-else and switch-case that allow conditional code execution based on the result of an evaluation.
08. Control structures: goto, loops, case/switch, exceptions
09. Loops - Statements like for and while that repeat the execution of code blocks.
10. Functions - Named reusable blocks of code to perform specific tasks, accepting input parameters and returning output values.
11. Object-oriented features: objects, classes, interfaces, subtyping, (multiple) inheritance
11. Object - A named structure that contains both data and code.
12. Methods - Functions that are part of a class definition and operate on objects.
13. Classes - Blueprints for objects that define properties and methods.
14. Inheritance - Ability of a class to inherit properties and methods from a parent class.
15. Data structures - Ways to organize data like arrays, lists, stacks, queues, etc.
16. Modules - Self-contained reusable code units that encapsulate functionality.
17. Scoping - Visibility of variables and functions based on context.
18. Abstraction - Exposing only essential details and hiding complexity.
19. Paradigms - Programming styles like procedural, object-oriented, functional, etc.
20. File I/O - Reading and writing data from and to external files in a programming language.
21. Macros